# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image:
          postgres:15
        env:
          POSTGRES_USER: ciuser
          POSTGRES_PASSWORD: cipassword
          POSTGRES_DB: cidb
        ports:
          - 5432:5432
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    env:
      DATABASE_URL: postgres://ciuser:cipassword@localhost:5432/cidb
      POSTGRES_URL_NON_POOLING: postgres://ciuser:cipassword@localhost:5432/cidb
      POSTGRES_PRISMA_URL: postgres://ciuser:cipassword@localhost:5432/cidb
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run lint
    - run: npm run build --if-present
    - run: npx prisma migrate deploy
    - run: npx prisma db seed
    - run: npm start &
    - run: npx wait-on http://localhost:3000
    - run: npx playwright install --with-deps
    - run: npx playwright test --trace on
